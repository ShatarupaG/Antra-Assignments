{
    "metadata": {
        "kernelspec": {
            "name": "SQL",
            "display_name": "SQL",
            "language": "sql"
        },
        "language_info": {
            "name": "sql",
            "version": ""
        }
    },
    "nbformat_minor": 2,
    "nbformat": 4,
    "cells": [
        {
            "cell_type": "code",
            "source": [
                "USE AdventureWorks2019\r\n",
                "GO"
            ],
            "metadata": {
                "azdata_cell_guid": "14207631-09cf-4819-b6fb-300f7ea8772b",
                "language": "sql"
            },
            "outputs": [],
            "execution_count": null
        },
        {
            "cell_type": "code",
            "source": [
                "--1. How many products can you find in the Production.Product table?\n",
                "SELECT COUNT(*) AS TotalProducts\n",
                "FROM Production.Product\n",
                "\n",
                "--2. Write a query that retrieves the number of products in the Production.Product table that are included in a subcategory.\n",
                "SELECT COUNT(*) AS ProductsInSubcategory\n",
                "FROM Production.Product\n",
                "WHERE ProductSubcategoryID IS NOT NULL\n",
                "\n",
                "--3. How many Products reside in each SubCategory?\n",
                "SELECT ProductSubcategoryID, COUNT(*) AS CountedProducts\n",
                "FROM Production.Product\n",
                "GROUP BY ProductSubcategoryID\n",
                "\n",
                "--4. How many products that do not have a product subcategory?\n",
                "SELECT COUNT(*) AS ProductsWithoutSubcategory\n",
                "FROM Production.Product\n",
                "WHERE ProductSubcategoryID IS NULL\n",
                "\n",
                "--5. Write a query to list the sum of products quantity in the Production.ProductInventory table.\n",
                "SELECT SUM(Quantity) AS TotalQuantity\n",
                "FROM Production.ProductInventory\n",
                "\n",
                "--6. Write a query to list the sum of products in the Production.ProductInventory table and LocationID set to 40 and limit the result to include just summarized quantities less than 100.\n",
                "SELECT ProductID, SUM(Quantity) AS TheSum\n",
                "FROM Production.ProductInventory\n",
                "WHERE LocationID = 40\n",
                "GROUP BY ProductID\n",
                "HAVING SUM(Quantity) < 100\n",
                "\n",
                "--7.  Write a query to list the sum of products with the shelf information in the Production.ProductInventory table and LocationID set to 40 and limit the result to include just summarized quantities less than 100.\n",
                "SELECT Shelf, ProductID, SUM(Quantity) AS TheSum\n",
                "FROM Production.ProductInventory\n",
                "WHERE LocationID = 40\n",
                "GROUP BY Shelf, ProductID\n",
                "HAVING SUM(Quantity) < 100\n",
                "\n",
                "--8. Write the query to list the average quantity for products where column LocationID has the value of 10 from the table Production.ProductInventory table.\n",
                "SELECT AVG(Quantity) AS AverageQuantity\n",
                "FROM Production.ProductInventory\n",
                "WHERE LocationID = 10\n",
                "\n",
                "--9. Write query  to see the average quantity  of  products by shelf  from the table Production.ProductInventory.\n",
                "SELECT ProductID, Shelf, AVG(Quantity) AS TheAvg\n",
                "FROM Production.ProductInventory\n",
                "GROUP BY ProductID, Shelf\n",
                "\n",
                "--10. Write query  to see the average quantity  of  products by shelf excluding rows that has the value of N/A in the column Shelf from the table Production.ProductInventory.\n",
                "SELECT ProductID, Shelf, AVG(Quantity) AS TheAvg\n",
                "FROM Production.ProductInventory\n",
                "WHERE Shelf <> 'N/A'\n",
                "GROUP BY ProductID, Shelf\n",
                "\n",
                "--11.  List the members (rows) and average list price in the Production.Product table. This should be grouped independently over the Color and the Class column. Exclude the rows where Color or Class are null.\n",
                "SELECT Color, Class, COUNT(*) AS TheCount, AVG(ListPrice) AS AvgPrice\n",
                "FROM Production.Product\n",
                "WHERE Color IS NOT NULL AND Class IS NOT NULL\n",
                "GROUP BY Color, Class\n",
                "\n",
                "--12. Write a query that lists the country and province names from person. CountryRegion and person. StateProvince tables. Join them and produce a result set similar to the following.\n",
                "SELECT CR.Name AS Country, SP.Name AS Province\n",
                "FROM Person.CountryRegion CR\n",
                "JOIN Person.StateProvince SP ON CR.CountryRegionCode = SP.CountryRegionCode\n",
                "\n",
                "--13. Write a query that lists the country and province names from person. CountryRegion and person. StateProvince tables and list the countries filter them by Germany and Canada. Join them and produce a result set similar to the following.\n",
                "SELECT CR.Name AS Country, SP.Name AS Province\n",
                "FROM Person.CountryRegion CR\n",
                "JOIN Person.StateProvince SP ON CR.CountryRegionCode = SP.CountryRegionCode\n",
                "WHERE CR.Name IN ('Germany', 'Canada')\n",
                "\n",
                "USE Northwind\n",
                "GO"
            ],
            "metadata": {
                "azdata_cell_guid": "0b4e2573-2744-4ba7-ac20-da37fb4a94c0",
                "language": "sql"
            },
            "outputs": [],
            "execution_count": null
        },
        {
            "cell_type": "code",
            "source": [
                "\n",
                "--14. List all Products that has been sold at least once in last 25 years.\n",
                "SELECT DISTINCT p.ProductName\n",
                "FROM Products p\n",
                "JOIN [Order Details] od ON p.ProductID = od.ProductID\n",
                "JOIN Orders o ON od.OrderID = o.OrderID\n",
                "WHERE o.OrderDate >= DATEADD(YEAR, -25, GETDATE())\n",
                "\n",
                "--15. List top 5 locations (Zip Code) where the products sold most.\n",
                "SELECT TOP 5 c.PostalCode, COUNT(od.ProductID) AS ProductCount\n",
                "FROM Orders o\n",
                "JOIN [Order Details] od ON o.OrderID = od.OrderID\n",
                "JOIN Customers c ON o.CustomerID = c.CustomerID\n",
                "GROUP BY c.PostalCode\n",
                "ORDER BY ProductCount DESC\n",
                "\n",
                "--16. List top 5 locations (Zip Code) where the products sold most in last 25 years.\n",
                "SELECT TOP 5 c.PostalCode, COUNT(od.ProductID) AS ProductCount\n",
                "FROM Orders o\n",
                "JOIN [Order Details] od ON o.OrderID = od.OrderID\n",
                "JOIN Customers c ON o.CustomerID = c.CustomerID\n",
                "WHERE o.OrderDate >= DATEADD(YEAR, -25, GETDATE())\n",
                "GROUP BY c.PostalCode\n",
                "ORDER BY ProductCount DESC\n",
                "\n",
                "--17. List all city names and number of customers in that city.\n",
                "SELECT c.City, COUNT(c.CustomerID) AS NumberOfCustomers\n",
                "FROM Customers c\n",
                "GROUP BY c.City\n",
                "\n",
                "--18. List city names which have more than 2 customers, and number of customers in that city.\n",
                "SELECT c.City, COUNT(c.CustomerID) AS NumberOfCustomers\n",
                "FROM Customers c\n",
                "GROUP BY c.City\n",
                "HAVING COUNT(c.CustomerID) > 2\n",
                "\n",
                "--19. List the names of customers who placed orders after 1/1/98 with order date.\n",
                "SELECT c.ContactName, o.OrderDate\n",
                "FROM Customers c\n",
                "JOIN Orders o ON c.CustomerID = o.CustomerID\n",
                "WHERE o.OrderDate > '1998-01-01'\n",
                "\n",
                "--20. List the names of all customers with most recent order dates.\n",
                "SELECT c.ContactName, MAX(o.OrderDate) AS MostRecentOrderDate\n",
                "FROM Customers c\n",
                "JOIN Orders o ON c.CustomerID = o.CustomerID\n",
                "GROUP BY c.ContactName\n",
                "\n",
                "--21. Display the names of all customers  along with the  count of products they bought.\n",
                "SELECT c.ContactName, COUNT(od.ProductID) AS ProductCount\n",
                "FROM Customers c\n",
                "JOIN Orders o ON c.CustomerID = o.CustomerID\n",
                "JOIN [Order Details] od ON o.OrderID = od.OrderID\n",
                "GROUP BY c.ContactName\n",
                "\n",
                "--22. Display the customer ids who bought more than 100 Products with count of products.\n",
                "SELECT c.CustomerID, COUNT(od.ProductID) AS ProductCount\n",
                "FROM Customers c\n",
                "JOIN Orders o ON c.CustomerID = o.CustomerID\n",
                "JOIN [Order Details] od ON o.OrderID = od.OrderID\n",
                "GROUP BY c.CustomerID\n",
                "HAVING COUNT(od.ProductID) > 100\n",
                "\n",
                "--23. List all of the possible ways that suppliers can ship their products.\n",
                "SELECT s.CompanyName AS SupplierCompanyName, sh.CompanyName AS ShippingCompanyName\n",
                "FROM Suppliers s\n",
                "CROSS JOIN Shippers sh\n",
                "\n",
                "--24. Display the products order each day. Show Order date and Product Name.\n",
                "SELECT o.OrderDate, p.ProductName\n",
                "FROM Orders o\n",
                "JOIN [Order Details] od ON o.OrderID = od.OrderID\n",
                "JOIN Products p ON od.ProductID = p.ProductID\n",
                "ORDER BY o.OrderDate, p.ProductName\n",
                "\n",
                "--25. Displays pairs of employees who have the same job title.\n",
                "SELECT e1.EmployeeID AS Employee1, e2.EmployeeID AS Employee2, e1.Title\n",
                "FROM Employees e1\n",
                "JOIN Employees e2 ON e1.Title = e2.Title AND e1.EmployeeID < e2.EmployeeID\n",
                "\n",
                "--26.  Display all the Managers who have more than 2 employees reporting to them.\n",
                "SELECT e1.EmployeeID, e1.LastName, e1.FirstName, COUNT(e2.EmployeeID) AS NumberOfReports\n",
                "FROM Employees e1\n",
                "JOIN Employees e2 ON e1.EmployeeID = e2.ReportsTo\n",
                "GROUP BY e1.EmployeeID, e1.LastName, e1.FirstName\n",
                "HAVING COUNT(e2.EmployeeID) > 2\n",
                "\n",
                "--27. Display the customers and suppliers by city.\n",
                "SELECT c.City, c.CompanyName AS Name, c.ContactName, 'Customer' AS Type\n",
                "FROM Customers c\n",
                "UNION ALL\n",
                "SELECT s.City, s.CompanyName AS Name, s.ContactName, 'Supplier' AS Type\n",
                "FROM Suppliers s\n",
                "ORDER BY City, Name"
            ],
            "metadata": {
                "azdata_cell_guid": "735962c9-3fe5-4995-b3a7-518a9ae5d8f4",
                "language": "sql"
            },
            "outputs": [],
            "execution_count": null
        }
    ]
}